<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==========================================================  -->
<!-- Configuration for mybatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>maven-mybatisdalgen-plugin</tt>, a DAL          -->
<!-- code generation utility specially developed for <tt>mybatis</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/(bundle-name)-dal</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>mvn mydalgen:mybatis</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- ============================================================================= -->

<mapper namespace="com.haiziyouke.db.dao.UserDAO">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->


    <!-- result maps for database table edu_user -->
    <resultMap id="RM-USER" type="com.haiziyouke.db.model.UserDO">
        <result property="userId" column="userId" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="nickName" column="nickName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sexCode" column="sexCode" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="phone" column="phone" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="image" column="image" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="clientId" column="clientId" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="realName" column="realName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="createTime" column="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modifyTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="deleted" column="deleted" javaType="java.lang.Boolean" jdbcType="BIT"/>
        <result property="identity" column="identity" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="intr" column="intr" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rank" column="rank" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for UserDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for UserDAO.insertUser -->
		<insert id="insertUser">
			insert into edu_user(userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted)
			values(#{userId},#{nickName},#{sexCode},#{phone},#{image},#{clientId},#{birthday},#{realName},#{createTime},#{modifyTime},1,#{intr},0);
		    <selectKey resultType="java.lang.String" keyProperty="userId" order="AFTER">
		select last_insert_id() as userId
    </selectKey>
	</insert>
	    <!-- mapped statement for UserDAO.selectUserByUserId -->
	    <select id="selectUserByUserId" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted from edu_user
			where deleted='0'
			<if test="query.userId !=null">
				and userId=#{query.userId}
			</if>
			<if test="query.phone !=null">
			    and  phone=#{query.phone}
			</if>
		    </select>
	    <!-- mapped statement for UserDAO.updateUserByUserId -->
	    <update id="updateUserByUserId">
		        update edu_user set
	  userId=#{update.userId}
	  <if test="update.phone!=null">
		,phone=#{update.phone}
	  </if>
		<if test="update.image!=null">
		,image=#{update.image}
		</if>
		<if test="update.modifyTime!=null">
		,modifyTime=#{update.modifyTime}
		</if>
		<if test="update.nickName!=null">
		 ,nickName=#{update.nickName}
		</if>
		<if test="update.sexCode>0">
		,sexCode=#{update.sexCode}
		</if>		
		,intr=#{update.intr}
		<if test="update.clientId!=null">
		,clientId=#{update.clientId}
		</if>
		where deleted='0'
		<if test="update.userId!=null">
		 and userId=#{update.userId}
		</if>
		    </update>
	    <!-- mapped statement for UserDAO.selectUserByUserName -->
	    <select id="selectUserByUserName" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted from edu_user
			where deleted='0'
			<if test="query.userId !=null">
				and userId=#{query.userId}
			</if>
			<if test="query.phone != null">
			    and  phone=#{query.phone}
			</if>
			<if test="query.nickName != null">
			    and nickName like concat('%',#{query.nickName},'%')
			</if>
			<if test="query.realName != null">
			    and realName like concat('%',#{query.realName},'%')
			</if>	
			<if test="query.identity >0">
			    and identity =#{query.identity}
			</if>
		    </select>
	    <!-- mapped statement for UserDAO.selectUserByUserNameCount -->
	    <select id="selectUserByUserNameCount" resultType="long">
		        select count(1) from edu_user
			where deleted='0'
			<if test="query.userId !=null">
				and userId=#{query.userId}
			</if>
			<if test="query.phone != null">
			    and phone like concat('%',#{query.phone},'%')
			</if>
			<if test="query.nickName != null">
			    and nickName like concat('%',#{query.nickName},'%')
			</if>
			<if test="query.realName != null">
			    and realName like concat('%',#{query.realName},'%')
			</if>	
			<if test="query.identity >0">
			    and identity =#{query.identity}
			</if>
		    </select>
	    <!-- mapped statement for UserDAO.selectUserByUserOrPhone -->
	    <select id="selectUserByUserOrPhone" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted from edu_user
			where deleted='0'
			<if test="query.userId !=null">
				and userId=#{query.userId}
			</if>
			<if test="query.phone != null">
			    and phone like concat('%',#{query.phone},'%')
			</if>
			<if test="query.nickName != null">
			    and nickName like concat('%',#{query.nickName},'%')
			</if>
			<if test="query.realName != null">
			    and realName like concat('%',#{query.realName},'%')
			</if>	
			<if test="query.identity >0">
			    and identity =#{query.identity}
			</if>
			order by createTime desc
			<if test="query.offset!=null and query.rows != null">
			  limit #{query.offset},#{query.rows} 
			</if>
		    </select>
	    <!-- mapped statement for UserDAO.selectUserByUserOrPhoneByOrder -->
	    <select id="selectUserByUserOrPhoneByOrder" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted from edu_user
			where deleted='0'
			<if test="query.userId !=null">
				and userId=#{query.userId}
			</if>
			<if test="query.phone != null">
			    and phone like concat('%',#{query.phone},'%')
			</if>
			<if test="query.nickName != null">
			    and nickName like concat('%',#{query.nickName},'%')
			</if>
			<if test="query.realName != null">
			    and realName like concat('%',#{query.realName},'%')
			</if>	
			<if test="query.identity >0">
			    and identity =#{query.identity}
			</if>
			order by createTime asc
			<if test="query.offset!=null and query.rows != null">
			  limit #{query.offset},#{query.rows} 
			</if>
		    </select>
	    <!-- mapped statement for UserDAO.updateUserIdentity -->
	    <update id="updateUserIdentity">
		        update edu_user set
	         modifyTime=now()
	     <if test = "update.intr != null">		
		    ,intr=#{update.intr}
		 </if>
		 <if test="update.identity > 0">
		    ,identity=#{update.identity}
		</if>
		<if test="update.clientId!=null">
		    ,clientId=#{update.clientId}
		</if>
		where deleted='0'
		<if test="update.userId!=null">
		 and userId=#{update.userId}
		</if>
		    </update>
	    <!-- mapped statement for UserDAO.insertUserByManager -->
		<insert id="insertUserByManager">
			insert into edu_user(userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted)
			values(#{userId},#{nickName},#{sexCode},#{phone},#{image},#{clientId},#{birthday},#{realName},now(),now(),#{identity},#{intr},0);
		    <selectKey resultType="java.lang.String" keyProperty="userId" order="AFTER">
		select last_insert_id() as userId
    </selectKey>
	</insert>
	    <!-- mapped statement for UserDAO.update -->
	    <update id="update">
		        update edu_user set
	         modifyTime=now()
	     <if test = "update.intr != null">		
		    ,intr=#{update.intr}
		 </if>
		 <if test="update.identity > 0">
		    ,identity=#{update.identity}
		</if>
		<if test="update.clientId!=null">
		    ,clientId=#{update.clientId}
		</if>
		<if test="update.intr!=null">
		    ,intr=#{update.intr}
		</if>
		<if test="update.image!=null">
		    ,image=#{update.image}
		</if>
		<if test="update.phone!=null">
		    ,phone=#{update.phone}
		</if>
		<if test="update.nickName!=null">
		    ,nickName=#{update.nickName}
		</if>
		where deleted='0'
		<if test="update.userId!=null">
		 and userId=#{update.userId}
		</if>
		    </update>
	    <!-- mapped statement for UserDAO.bindUserByUserId -->
	    <update id="bindUserByUserId">
		        update edu_user set
	  	modifyTime=now()
		<if test="update.clientId!=null">
		,clientId=#{update.clientId}
		</if>
		where deleted='0'
		<if test="update.userId!=null">
		 and userId=#{update.userId}
		</if>
		    </update>
	    <!-- mapped statement for UserDAO.selectAllSJ -->
	    <select id="selectAllSJ" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted from edu_user
			where deleted='0'
			      and phone is null
		    </select>
	    <!-- mapped statement for UserDAO.selectByUserNameForManage -->
	    <select id="selectByUserNameForManage" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted from edu_user
			where deleted='0'
			<if test="query.nickName !=null">
				and nickName=#{query.nickName}
			</if>
		    </select>
	    <!-- mapped statement for UserDAO.selectUserByUserIdForApp -->
	    <select id="selectUserByUserIdForApp" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted,rank from edu_user
			where deleted='0'
			<if test="query.userId !=null">
				and userId=#{query.userId}
			</if>
		    </select>
	    <!-- mapped statement for UserDAO.selectTeacherList -->
	    <select id="selectTeacherList" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted,rank from edu_user
			where deleted='0' and identity=2
			<if test="query.nickName != null">
			    and nickName like concat('%',#{query.nickName},'%')
			</if>
			<if test="query.realName != null">
			    and realName like concat('%',#{query.realName},'%')
			</if>	
			order by createTime desc
			<if test="query.offset!=null and query.rows != null">
			  limit #{query.offset},#{query.rows} 
			</if>
		    </select>
	    <!-- mapped statement for UserDAO.selectTeacheByName -->
	    <select id="selectTeacheByName" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted from edu_user
			where deleted='0' and identity=2
			    and nickName = #{nickName}
		    </select>
	    <!-- mapped statement for UserDAO.selectTeacherCount -->
	    <select id="selectTeacherCount" resultType="long">
		        select count(1) from edu_user
			where deleted='0' and identity=2
			<if test="query.nickName != null">
			    and nickName like concat('%',#{query.nickName},'%')
			</if>
			<if test="query.realName != null">
			    and realName like concat('%',#{query.realName},'%')
			</if>
		    </select>
	    <!-- mapped statement for UserDAO.addTeacher -->
		<insert id="addTeacher">
			insert into edu_user(userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,rank,deleted)
			values(#{userId},#{nickName},#{sexCode},#{phone},#{image},#{clientId},#{birthday},#{realName},now(),now(),#{identity},#{intr},#{rank},0);
		    <selectKey resultType="java.lang.String" keyProperty="userId" order="AFTER">
		select last_insert_id() as userId
    </selectKey>
	</insert>
	    <!-- mapped statement for UserDAO.updateTeacher -->
	    <update id="updateTeacher">
		        update edu_user set
	         modifyTime=now()
	     <if test = "update.intr != null">		
		    ,intr=#{update.intr}
		 </if>
		 <if test="update.identity > 0">
		    ,identity=#{update.identity}
		</if>
		<if test="update.clientId!=null">
		    ,clientId=#{update.clientId}
		</if>
		<if test="update.intr!=null">
		    ,intr=#{update.intr}
		</if>
		<if test="update.image!=null">
		    ,image=#{update.image}
		</if>
		<if test="update.phone!=null">
		    ,phone=#{update.phone}
		</if>
		<if test="update.nickName!=null">
		    ,nickName=#{update.nickName}
		</if>
		<if test="update.rank!=null">
		    ,rank=#{update.rank}
		</if>
		where deleted='0'
		<if test="update.userId!=null">
		 and userId=#{update.userId}
		</if>
		    </update>
	    <!-- mapped statement for UserDAO.selectUserByUserIds -->
	    <select id="selectUserByUserIds" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted from edu_user
			where deleted='0'
				and userId in 
				<foreach item="query.userIds" index="index" collection="query.userIds" open="(" separator="," close=")">
                        #{query.userIds}
                </foreach>
		    </select>
	    <!-- mapped statement for UserDAO.selectAllClientId -->
	    <select id="selectAllClientId" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted from edu_user
			where deleted='0'
			      and clientId is not null
		    </select>
	    <!-- mapped statement for UserDAO.selectByUserNameForList -->
	    <select id="selectByUserNameForList" resultMap="RM-USER">
		        select userId,nickName,sexCode,phone,image,clientId,birthday,realName,createTime,modifyTime,identity,intr,deleted from edu_user
			where deleted='0'
				and nickName=#{nickName}
		    </select>
	    <!-- mapped statement for UserDAO.deleteUserInfo -->
	    <update id="deleteUserInfo">
		        update edu_user set
	         modifyTime=now(),deleted=1   
		where deleted='0'
		 and userId=#{userId}
		    </update>
	</mapper>